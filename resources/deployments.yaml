---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    repo: https://github.com/charlesthomas/homelab-longhorn
  labels:
    app.kubernetes.io/instance: longhorn
    app.kubernetes.io/name: longhorn
  name: longhorn-driver-deployer
  namespace: longhorn
spec:
  replicas: 1
  selector:
    matchLabels:
      app: longhorn-driver-deployer
  template:
    metadata:
      annotations:
        repo: https://github.com/charlesthomas/homelab-longhorn
      labels:
        app: longhorn-driver-deployer
        app.kubernetes.io/instance: longhorn
        app.kubernetes.io/name: longhorn
    spec:
      containers:
        - command:
            - longhorn-manager
            - -d
            - deploy-driver
            - --manager-image
            - longhornio/longhorn-manager:v1.7.2
            - --manager-url
            - http://longhorn-backend:9500/v1
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: CSI_ATTACHER_IMAGE
              value: longhornio/csi-attacher:v4.7.0
            - name: CSI_PROVISIONER_IMAGE
              value: longhornio/csi-provisioner:v4.0.1-20241007
            - name: CSI_NODE_DRIVER_REGISTRAR_IMAGE
              value: longhornio/csi-node-driver-registrar:v2.12.0
            - name: CSI_RESIZER_IMAGE
              value: longhornio/csi-resizer:v1.12.0
            - name: CSI_SNAPSHOTTER_IMAGE
              value: longhornio/csi-snapshotter:v7.0.2-20241007
            - name: CSI_LIVENESS_PROBE_IMAGE
              value: longhornio/livenessprobe:v2.14.0
          image: longhornio/longhorn-manager:v1.7.2
          imagePullPolicy: IfNotPresent
          name: longhorn-driver-deployer
      initContainers:
        - command:
            - sh
            - -c
            - while [ $(curl -m 1 -s -o /dev/null -w "%{http_code}" http://longhorn-backend:9500/v1) != "200" ]; do echo waiting; sleep 2; done
          image: longhornio/longhorn-manager:v1.7.2
          name: wait-longhorn-manager
      priorityClassName: longhorn-critical
      securityContext:
        runAsUser: 0
      serviceAccountName: longhorn-service-account
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    repo: https://github.com/charlesthomas/homelab-longhorn
  labels:
    app: longhorn-ui
    app.kubernetes.io/instance: longhorn
    app.kubernetes.io/name: longhorn
  name: longhorn-ui
  namespace: longhorn
spec:
  replicas: 2
  selector:
    matchLabels:
      app: longhorn-ui
  template:
    metadata:
      annotations:
        repo: https://github.com/charlesthomas/homelab-longhorn
      labels:
        app: longhorn-ui
        app.kubernetes.io/instance: longhorn
        app.kubernetes.io/name: longhorn
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - longhorn-ui
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - env:
            - name: LONGHORN_MANAGER_IP
              value: http://longhorn-backend:9500
            - name: LONGHORN_UI_PORT
              value: "8000"
          image: longhornio/longhorn-ui:v1.8.1
          imagePullPolicy: IfNotPresent
          name: longhorn-ui
          ports:
            - containerPort: 8000
              name: http
          volumeMounts:
            - mountPath: /var/cache/nginx/
              name: nginx-cache
            - mountPath: /var/config/nginx/
              name: nginx-config
            - mountPath: /var/run/
              name: var-run
      priorityClassName: longhorn-critical
      serviceAccountName: longhorn-ui-service-account
      volumes:
        - emptyDir: {}
          name: nginx-cache
        - emptyDir: {}
          name: nginx-config
        - emptyDir: {}
          name: var-run
